/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ufp.inf.lp2.map;

import edu.princeton.cs.introcs.In;
import static edu.ufp.inf.aed2.project.parser.JAXP_DOM_OSM_Parser_POI.distanceGreatCircle;
import java.awt.event.ItemEvent;
import static java.awt.event.KeyEvent.VK_ENTER;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Jo√£o
 */
public class DrawMap extends javax.swing.JFrame {

    /**
     * Creates new form drawmap
     */
    public DrawMap() {
	initComponents();
	this.mapJPanel1.map=this.map;
	this.mapJPanelSearch1.map=this.map;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneMap = new javax.swing.JTabbedPane();
        jPanelMapa = new javax.swing.JPanel();
        mapJPanel1 = new edu.ufp.inf.lp2.map.MapJPanel();
        jSlider1 = new javax.swing.JSlider();
        jPanel2 = new javax.swing.JPanel();
        jTextFieldPOI1 = new javax.swing.JTextField();
        jComboBox3 = new javax.swing.JComboBox();
        jButtonPOI1 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox();
        jTextFieldPOI2 = new javax.swing.JTextField();
        jButtonPOI2 = new javax.swing.JButton();
        jButtonDistance = new javax.swing.JButton();
        jTextFieldDistance = new javax.swing.JTextField();
        jTextFieldResult1 = new javax.swing.JTextField();
        jTextFieldResult2 = new javax.swing.JTextField();
        jButtonSavePath = new javax.swing.JButton();
        mapJPanelSearch1 = new edu.ufp.inf.lp2.map.MapJPanelSearch();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(850, 520));

        jPanelMapa.setLayout(new java.awt.BorderLayout());

        jSlider1.setMaximum(10);
        jSlider1.setMinimum(1);
        jSlider1.setValue(1);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout mapJPanel1Layout = new javax.swing.GroupLayout(mapJPanel1);
        mapJPanel1.setLayout(mapJPanel1Layout);
        mapJPanel1Layout.setHorizontalGroup(
            mapJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapJPanel1Layout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(501, Short.MAX_VALUE))
        );
        mapJPanel1Layout.setVerticalGroup(
            mapJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mapJPanel1Layout.createSequentialGroup()
                .addGap(0, 506, Short.MAX_VALUE)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelMapa.add(mapJPanel1, java.awt.BorderLayout.CENTER);

        jTabbedPaneMap.addTab("Mapa", jPanelMapa);

        jTextFieldPOI1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPOI1KeyPressed(evt);
            }
        });

        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });

        jButtonPOI1.setText("Pesquisar");
        jButtonPOI1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPOI1ActionPerformed(evt);
            }
        });

        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });

        jTextFieldPOI2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPOI2KeyPressed(evt);
            }
        });

        jButtonPOI2.setText("Pesquisar");
        jButtonPOI2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPOI2ActionPerformed(evt);
            }
        });

        jButtonDistance.setText("Distancia");
        jButtonDistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDistanceActionPerformed(evt);
            }
        });

        jButtonSavePath.setText("Salvar Caminho");
        jButtonSavePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSavePathActionPerformed(evt);
            }
        });

        mapJPanelSearch1.setBackground(new java.awt.Color(255, 255, 255));
        mapJPanelSearch1.setMaximumSize(new java.awt.Dimension(264, 205));
        mapJPanelSearch1.setMinimumSize(new java.awt.Dimension(264, 205));

        javax.swing.GroupLayout mapJPanelSearch1Layout = new javax.swing.GroupLayout(mapJPanelSearch1);
        mapJPanelSearch1.setLayout(mapJPanelSearch1Layout);
        mapJPanelSearch1Layout.setHorizontalGroup(
            mapJPanelSearch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 671, Short.MAX_VALUE)
        );
        mapJPanelSearch1Layout.setVerticalGroup(
            mapJPanelSearch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonPOI1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButtonPOI2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonDistance)
                                    .addComponent(jTextFieldPOI2)
                                    .addComponent(jTextFieldPOI1)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldResult1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldResult2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 318, Short.MAX_VALUE)
                        .addComponent(jButtonSavePath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(mapJPanelSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPOI1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(jButtonPOI1)
                        .addGap(49, 49, 49)
                        .addComponent(jTextFieldResult1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPOI2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButtonPOI2)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(mapJPanelSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)))
                .addComponent(jTextFieldResult2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDistance)
                    .addComponent(jTextFieldDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSavePath))
                .addGap(104, 104, 104))
        );

        jTabbedPaneMap.addTab("Lista", jPanel2);

        jMenu1.setText("File");

        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemOpen);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneMap)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneMap)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPOI1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPOI1ActionPerformed
	this.mapJPanelSearch1.pois.clear();
	this.jComboBox3.removeAllItems();
	String search = this.jTextFieldPOI1.getText();
	this.mapJPanelSearch1.pois = this.mapJPanel1.map.getPOI(search);
	for (POI p : this.mapJPanelSearch1.pois) {
	    this.jComboBox3.addItem("" + (this.mapJPanelSearch1.pois.indexOf(p) + 1));
	}
	this.jTextFieldResult1.setText("" + this.mapJPanelSearch1.pois.get(0).resumo());
    }//GEN-LAST:event_jButtonPOI1ActionPerformed

    private void jButtonPOI2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPOI2ActionPerformed
	this.mapJPanelSearch1.pois2.clear();
	this.jComboBox4.removeAllItems();
	String search = this.jTextFieldPOI2.getText();
	this.mapJPanelSearch1.pois2 = this.mapJPanel1.map.getPOI(search);
	for (POI p : this.mapJPanelSearch1.pois2) {
	    this.jComboBox4.addItem("" + (this.mapJPanelSearch1.pois2.indexOf(p) + 1));
	}
	this.jTextFieldResult2.setText("" + this.mapJPanelSearch1.pois2.get(0).resumo());
    }//GEN-LAST:event_jButtonPOI2ActionPerformed

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
	if (evt.getStateChange() == ItemEvent.SELECTED) {
	    this.jTextFieldResult1.setText(this.mapJPanelSearch1.pois.get(this.jComboBox3.getSelectedIndex()).resumo());
	}
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
	if (evt.getStateChange() == ItemEvent.SELECTED) {
	    this.jTextFieldResult2.setText(this.mapJPanelSearch1.pois2.get(this.jComboBox4.getSelectedIndex()).resumo());
	}
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void jButtonDistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDistanceActionPerformed
	this.mapJPanelSearch1.path.clear();
	POI p1 = this.mapJPanelSearch1.pois.get(this.jComboBox3.getSelectedIndex());
	POI p2 = this.mapJPanelSearch1.pois2.get(this.jComboBox4.getSelectedIndex());
	this.mapJPanelSearch1.path.add(p1);
	this.mapJPanelSearch1.path.add(p2);
	this.mapJPanelSearch1.edges.clear();
	this.mapJPanelSearch1.edges = this.mapJPanel1.map.shortestPath(p1, p2);
	if (this.mapJPanelSearch1.edges.size() > 0) {
	    MapNode from = this.mapJPanel1.map.getNode(this.mapJPanelSearch1.edges.get(0).from());
	    MapNode to = this.mapJPanel1.map.getNode(this.mapJPanelSearch1.edges.get(this.mapJPanelSearch1.edges.size() - 1).to());
	    double distance = 0;
	    distance += this.mapJPanel1.map.getDistance(p1, p2);
	    distance += distanceGreatCircle(p1.getLat(), p1.getLon(), from.getLat(), from.getLon());
	    distance += distanceGreatCircle(p2.getLat(), p2.getLon(), to.getLat(), to.getLon());
	    this.jTextFieldDistance.setText("" + String.format("%.2f", distance) + " metros");
	    MapEdge last = new MapEdge(p2, to, distanceGreatCircle(p2.getLat(), p2.getLon(), to.getLat(), to.getLon()));//primeira aresta artificial
	    MapEdge first = new MapEdge(p1, from, distanceGreatCircle(p1.getLat(), p1.getLon(), from.getLat(), from.getLon())); //segunda aresta artificial
	    this.mapJPanelSearch1.edges.add(last);//inclui a primeira aresta artificial
	    this.mapJPanelSearch1.edges.add(first); //inclui a segunda aresta artificial
	}
	else
	    JOptionPane.showMessageDialog(this, "N√£o √© poss√≠vel tra√ßar uma rota.\nPontos de origem e de destino s√£o iguais.");


    }//GEN-LAST:event_jButtonDistanceActionPerformed

    private void jTextFieldPOI1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPOI1KeyPressed
	if (evt.getKeyCode() == VK_ENTER) {
	    this.jButtonPOI1ActionPerformed(null);
	}
    }//GEN-LAST:event_jTextFieldPOI1KeyPressed

    private void jTextFieldPOI2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPOI2KeyPressed
	if (evt.getKeyCode() == VK_ENTER) {
	    this.jButtonPOI2ActionPerformed(null);
	}
    }//GEN-LAST:event_jTextFieldPOI2KeyPressed

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
	String name;
	JFileChooser chooser = new JFileChooser();
	FileNameExtensionFilter filter = new FileNameExtensionFilter(".BIN", "bin");
	chooser.setFileFilter(filter);
	int returnVal = chooser.showOpenDialog(null);
	if (returnVal == JFileChooser.APPROVE_OPTION) {
	    name = chooser.getSelectedFile().getAbsolutePath();
	    File file = new File(name);
	    try (FileInputStream fis = new FileInputStream(file); ObjectInputStream ois = new ObjectInputStream(fis)) {
		try {
		    ArrayList poi = (ArrayList) ois.readObject();
		    ArrayList me = (ArrayList) ois.readObject();
		    this.mapJPanelSearch1.path.clear();
		    this.mapJPanelSearch1.edges.clear();
		    this.mapJPanelSearch1.path = poi;
		    this.mapJPanelSearch1.edges = me;
		    this.mapJPanelSearch1.repaint();
		    double distance = 0;
		    for (MapEdge edge : this.mapJPanelSearch1.edges) {
			distance += edge.weight();
		    }
		    this.jTextFieldDistance.setText("" + String.format("%.2f", distance));
		} catch (ClassNotFoundException ex) {
		    Logger.getLogger(DrawMap.class.getName()).log(Level.SEVERE, null, ex);
		}
	    } catch (FileNotFoundException ex) {
		Logger.getLogger(DrawMap.class.getName()).log(Level.SEVERE, null, ex);
	    } catch (IOException ex) {
		Logger.getLogger(DrawMap.class.getName()).log(Level.SEVERE, null, ex);
	    }
	}
    }//GEN-LAST:event_jMenuItemOpenActionPerformed

    private void jButtonSavePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSavePathActionPerformed
	if (this.mapJPanelSearch1.edges.size() > 0) {
	    String name;
	    JFileChooser chooser = new JFileChooser();
	    FileNameExtensionFilter filter = new FileNameExtensionFilter(".TXT", "txt");
	    chooser.setFileFilter(filter);
	    int returnVal = chooser.showSaveDialog(null);
	    if (returnVal == JFileChooser.APPROVE_OPTION) {
		name = chooser.getSelectedFile().getAbsolutePath();
		File file = new File(name + ".txt");
		try {
		    File fileBin = new File(name + ".bin");
		    try (FileOutputStream fos = new FileOutputStream(fileBin); ObjectOutputStream oos = new ObjectOutputStream(fos)) {
			oos.writeObject(this.mapJPanelSearch1.path);
			oos.writeObject(this.mapJPanelSearch1.edges);
		    }
		} catch (IOException ex) {
		    Logger.getLogger(MapGraph.class.getName()).log(Level.SEVERE, null, ex);
		}
		try (FileWriter fw = new FileWriter(file)) {
		    PrintWriter pw = new PrintWriter(fw);
		    double distance = 0;
		    /**
		     * bloco que comp√µe ordenadamente os nomes das ruas e distancias duas ultimas arestas da cole√ß√£o s√£o artificiais, referentes √†s distancias entre os dois POI's e seus MapNodes aresta do POI de origem garantidamente a √∫ltima aresta (edges.size()-1) aresta do POI de destino garantidamente a pen√∫ltima aresta (edges.size()-2) l√™-se primeiro a aresta do POI de origem e em seguida ciclo at√© edges.size()-2
		     */
		    distance += this.mapJPanelSearch1.edges.get(this.mapJPanelSearch1.edges.size() - 1).weight(); //distancia da segunda aresta artificial
		    pw.print(this.mapJPanelSearch1.edges.get(this.mapJPanelSearch1.edges.size() - 1).resumo() + " (" + String.format("%.2f", distance) + " metros)\n");
		    distance = 0;
		    for (int i = 0; i < this.mapJPanelSearch1.edges.size() - 2; i++) {
			if (i == (this.mapJPanelSearch1.edges.size() - 3) && this.mapJPanelSearch1.edges.get(i).getName().compareToIgnoreCase(this.mapJPanelSearch1.edges.get(i + 1).getName()) != 0) { //se a pesquisa chegar na penultima aresta da pesquisa e o nome desta for diferente da √∫ltima
			    distance += this.mapJPanelSearch1.edges.get(i).weight();
			    pw.print(this.mapJPanelSearch1.edges.get(i).resumo() + " " + String.format("%.2f", distance) + " metros\n");
			    pw.print(this.mapJPanelSearch1.edges.get(i + 1).resumo() + " (" + String.format("%.2f", this.mapJPanelSearch1.edges.get(i + 1).weight()) + " metros)\n");
			} else if (i == (this.mapJPanelSearch1.edges.size() - 3) && this.mapJPanelSearch1.edges.get(i).getName().compareToIgnoreCase(this.mapJPanelSearch1.edges.get(i + 1).getName()) == 0) { //se a pesquisa chegar na penultima aresta da pesquisa e o nome desta for igual da √∫ltima
			    distance += this.mapJPanelSearch1.edges.get(i).weight();
			    distance += this.mapJPanelSearch1.edges.get(i + 1).weight();
			    pw.print(this.mapJPanelSearch1.edges.get(i).resumo() + " (" + String.format("%.2f", distance) + " metros)\n");
			} else if (this.mapJPanelSearch1.edges.get(i).getName().compareToIgnoreCase(this.mapJPanelSearch1.edges.get(i + 1).getName()) != 0) {//se a aresta atual possuir o mesmo nome da anterior, n√£o escreve
			    distance += this.mapJPanelSearch1.edges.get(i).weight();
			    pw.print(this.mapJPanelSearch1.edges.get(i).resumo() + " " + String.format("%.2f", distance) + " metros\n");
			    distance = 0;
			} else {
			    distance += this.mapJPanelSearch1.edges.get(i).weight();
			}
		    }
		    pw.close();
		    fw.close();
		} catch (IOException ex) {
		    Logger.getLogger(DrawMap.class.getName()).log(Level.SEVERE, null, ex);
		}
	    }
	}
	else
	    JOptionPane.showMessageDialog(this, "N√£o h√° rota v√°lida para ser salva.");
    }//GEN-LAST:event_jButtonSavePathActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        JSlider source = (JSlider)evt.getSource();
	int value=source.getValue();
	this.mapJPanel1.scaleRelative=(value)/1;
	this.mapJPanel1.revalidate();
	this.mapJPanel1.repaint();
    }//GEN-LAST:event_jSlider1StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
	/* Set the Nimbus look and feel */

	java.awt.EventQueue.invokeLater(new Runnable() {
	    public void run() {
		DrawMap dm = new DrawMap();
		//new DrawMap().setVisible(true);
		
		dm.pack();
		dm.setVisible(true);
	    }
	});
    }

MapGraph map=new MapGraph(new In(MapGraph.osm_nodes_inputfile_name), new In(MapGraph.osm_highway_inputfile_name), new In(MapGraph.osm_hotels_inputfile_name), new In(MapGraph.osm_restaurant_inputfile_name));
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDistance;
    private javax.swing.JButton jButtonPOI1;
    private javax.swing.JButton jButtonPOI2;
    private javax.swing.JButton jButtonSavePath;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelMapa;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTabbedPane jTabbedPaneMap;
    private javax.swing.JTextField jTextFieldDistance;
    private javax.swing.JTextField jTextFieldPOI1;
    private javax.swing.JTextField jTextFieldPOI2;
    private javax.swing.JTextField jTextFieldResult1;
    private javax.swing.JTextField jTextFieldResult2;
    private edu.ufp.inf.lp2.map.MapJPanel mapJPanel1;
    private edu.ufp.inf.lp2.map.MapJPanelSearch mapJPanelSearch1;
    // End of variables declaration//GEN-END:variables
}
