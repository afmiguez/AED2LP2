/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ufp.inf.lp2.map;

import edu.princeton.cs.introcs.In;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JSlider;

/**
 *
 * @author AF
 */
public class MapJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MapJPanel
     */
    public MapJPanel() {
	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    protected void paintComponent(Graphics g) {
	super.paintComponent(g); //To change body of generated methods, choose Tools | Templates.
	int width = this.getWidth();
	int height = this.getHeight();

	img = null;
	double scale = width / this.map.getMaxX() < height / this.map.getMaxY() ? width / this.map.getMaxX() : height / this.map.getMaxY();
	scale *= scaleRelative;
	/*try {
	 img=ImageIO.read(new File("data//Capture.PNG"));
	 } catch (IOException ex) {
	 Logger.getLogger(MapJPanel1.class.getName()).log(Level.SEVERE, null, ex);
	 }*/
	Image offscreenImg = this.createImage(width, height);

	Graphics offscreenGraphics = offscreenImg.getGraphics();
	offscreenGraphics.setColor(this.getBackground());
	offscreenGraphics.fillRect(0, 0, width, height);
	offscreenGraphics.drawImage(img, 0, 0, null);
	this.map.drawNode(offscreenGraphics, scale); //desenha todos os nÃ³s do mapa
	this.map.drawPOI(offscreenGraphics, scale, Color.RED); //desenha todos os pois do mapa
	this.map.drawEdges(offscreenGraphics, scale); //desenha todas as arestas do mapa
	g.drawImage(offscreenImg, 0, 0, null);
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    MapGraph map = null;
    //MapGraph map = new MapGraph(new In(MapGraph.osm_nodes_inputfile_name), new In(MapGraph.osm_highway_inputfile_name), new In(MapGraph.osm_hotels_inputfile_name), new In(MapGraph.osm_restaurant_inputfile_name));
    //MapGraph map =new MapGraph(1000,500);
    double scaleRelative=1;
    private Image img;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
